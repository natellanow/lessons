package com.company.project.lesson06.books;
/*
## ПРИ ОПАСАНИИ КЛАССОВ, ВСЕ СВОЙСТВА ОБЪЯВЛЯТЬ С МОДИФИКАТОРОМ `PRIVATE`

## Методы, устанавливающие (сеттеры) и возвращающие (геттеры) значения свойств, объявлять при необходимости.

### Задача 1. Описать объектную модель Альпинист, Гора, Группа для восхождения на гору.

1. Альпинист создаётся с именем (не менее 3 символов) и адресом проживания (не менее 5 символов).
2. Гора создаётся с названием (не менее 4 символов), страной (не менее 4 символов) и высотой (не менее 100 метров)
3. Группа для восхождения на гору создаётся со следующими характеристиками и возможностями:
        1) идёт набор в группу или нет;
    2) массив альпинистов;
    3) гора;
    4) должна быть возможность добавить альпиниста в группу (в массив), если набор ещё идёт
4. В методе main (отдельного класса) создать:
        1) 3 группы для восхождений на 3 различных горы.
        2) В первой группе 3 альпиниста (набор закрыт)
    3) Во второй и третьей группах по 2 альпиниста (набор в эти группы открыт)

При выполнении задания необходимо обращать внимание на модификаторы доступа и выполнять все необходимые проверки.

        ### Задача 2. Список разрешенных продуктов

1. Класс Продукт:
        1) Свойства: название продукта / белки / жиры / углеводы / калории
    2) Минимум 4 конструктора
    3) Реализовать необходимые проверки входящих данных
    4) Создать не менее 4 экземпляров данного класса
2. Класс МоиРазрешенныеПродукты:
        1) Свойства: максимальное количество белков / максимальное количество жиров / максимальное количество углеводов /
максимальное количество калорий
    2) Реализовать метод, который принимает на Продукт и проверяет его. Если характеристики продукта не соответствуют
заявленным разрешениям (например, слишком большое содержание калорий), метод должен вывести в консоль информацию
о несоответствии и вернуть false. Если характеристики продукта полностью соответствуют заявленным разрешениям,
метод должен вернуть true.

При выполнении задания необходимо обращать внимание на модификаторы доступа и выполнять все необходимые проверки.
 */
public class task06 {
}
